@model Budgeter.Models.BudgetItem

@{

}

    <div class="panel-heading">
        <div class="text-center">
        </div>
    </div>
    <div class="panel-wrapper collapse in">
        
        @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "editBudgetForm", action = "javascript:editBudgetSumbitForm("+Model.Id.ToString()+")" }))
            {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.Id )
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <br />
                <div class="form-group col-xs-11 center-block">
                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-xs-11 center-block">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-xs-11 center-block">
                    @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-6">
                        @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control", required = "required" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-xs-11 center-block">
                    <div class="col-md-offset-7 col-md-4">
                        <input type="submit" value="Create" class="fcbtn btn btn-outline btn-success btn-1d" style="display:none;" />
                    </div>
                </div>
            </div>
        }


    </div>
    <div class="edit-modal-footer">
        <button type="button" class="btn btn-default waves-effect" data-dismiss="modal">Close</button>
        <button type="submit" form="editBudgetForm" class="btn btn-success waves-effect waves-light">Save changes</button>
    </div>
