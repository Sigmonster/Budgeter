@model Budgeter.Models.Transaction

@{

}

@*@using (Html.BeginForm())*@
@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "editTransactionModalFormId", action= "javascript:submitEditTransactionForm()" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(m => m.Id)
    @Html.HiddenFor(m=>m.AccountId)
    <div class="form-horizontal">
        <h4>Edit Transaction</h4>

        <div class="form-group partial-form-group col-xs-10 center-block">
            <label class="control-label col-md-12" for="IsExpense">Type</label>
            <div class="col-md-12">
                <select class="form-control" id="IsExpenseEdit" name="IsExpense" required="required">
                    <option value="true">Expense</option>
                    <option value="false">Income</option>
                </select>
                @Html.ValidationMessageFor(model => model.IsExpense, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group partial-form-group col-xs-10 center-block" id="categoryEdit-form-group">
            <label class="control-label col-md-12" for="selector_1">Category</label>
            <div class="col-md-12">
                @Html.DropDownList("CategoryId", null, "Select Category", htmlAttributes: new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group partial-form-group col-xs-10 center-block">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control date-picker", required = "required" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group partial-form-group col-xs-10 center-block">
            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group partial-form-group col-xs-10 center-block">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-12">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group partial-form-group col-xs-10 center-block">
            <label class="control-label col-md-2" for="IsReconciled">Processed?</label>
            <div class="col-md-12">
                <select class="form-control" id="IsReconciled" name="IsReconciled" required="required">
                    <option value="true">Processed</option>
                    <option value="false">Pending</option>
                </select>
                @Html.ValidationMessageFor(model => model.IsReconciled, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group partial-form-group col-xs-10 center-block">
            <div class="col-md-offset-2 col-md-12">
                <button type="submit" @*onclick="javascript:SubmitEditTransactionForm()"*@ class="fcbtn btn btn-outline btn-success btn-1d">Save</button>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

<script>
        $(function () {
            /*Manage Account Section*/
            $("#IsExpenseEdit").change(function () {
                var value = $(this).val();
                var selectedCategoryId ="@Model.CategoryId.ToString()";
                if (value == "false") {
                    $("#categoryEdit-form-group").hide();
                    $("#categoryEdit-form-group select").val("18");
                }
                else {
                    $("#categoryEdit-form-group select").val(selectedCategoryId);
                    $("#categoryEdit-form-group").show();
                }
            })

            $(".date-picker").datepicker({ dateformat: "mm/dd/yy" });

        });
</script>