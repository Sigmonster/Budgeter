@using Budgeter.Models
@model Transaction
@{

}
<div class="col-md-4 col-xs-12">
    <div class="panel panel-default" id="Account-AddTransaction-Wrapper">
        <div class="panel-heading">
            <div class="text-center">
                <h3>Add Transaction</h3>
            </div>
        </div>
        <div class="panel-wrapper collapse in">
            @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "addTransactionFormId", action= "javascript:submitAddTransactionForm()" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.HiddenFor(m => m.AccountId)
                    <div class="form-group col-xs-11 center-block">
                        <label class="control-label col-md-12" for="IsExpense">Type</label>
                        <div class="col-md-12">
                            <select class="form-control" id="IsExpense" name="IsExpense" required="required">
                                <option value="true">Expense</option>
                                <option value="false">Income</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.IsExpense, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-xs-11 center-block" id="category-form-group">
                        <label class="control-label col-md-12" for="selector_1">Category</label>
                        <div class="col-md-12">
                            @Html.DropDownList("CategoryId", null, "Select Category", htmlAttributes: new { @class = "form-control", required = "required" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-xs-11 center-block">
                        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control date-picker", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-xs-11 center-block">
                        @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group col-xs-11 center-block">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", required = "required" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-xs-11 center-block">
                        <label class="control-label col-md-12" for="IsReconciled">Processed?</label>
                        <div class="col-md-12">
                            <select class="form-control" id="IsReconciled" name="IsReconciled" required="required">
                                <option value="true">Processed</option>
                                <option value="false">Pending</option>
                            </select>
                            @Html.ValidationMessageFor(model => model.IsReconciled, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-xs-11 center-block">
                        <div class="pull-right">
                            <input type="submit" value="Add Transaction" class="fcbtn btn btn-outline btn-success btn-1d" />
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="panel-footer"></div>
    </div>
</div>

<script>
    $(function () {
        /*Manage Account Section*/
        $("#IsExpense").change(function () {
            var value = $(this).val();
            if (value == "false") {
                $("#category-form-group").hide();
                $("#CategoryId").val("6");
            }
            else {
                $("#CategoryId").val("");
                $("#category-form-group").show();
            }
        })

        $(".date-picker").datepicker({ dateformat: "mm/dd/yy" });

    });
    $("#Date").val(new Date().toLocaleDateString());
    //$(function () {
    //    // Initialize form validation on the registration form.
    //    // It has the name attribute "registration"
    //    $("form[id='addTransactionFormId']").validate({
    //        // Specify validation rules
    //        rules: {
    //            // The key name on the left side is the name attribute
    //            // of an input field. Validation rules are defined
    //            // on the right side
    //            IsExpense: "required",
    //            CategoryId: "required",
    //            Date: {
    //                required: true,
    //            },
    //            Amount: {
    //                required: true,
    //                minlength: 5
    //            },
    //            Description:{
    //                required: true,
    //                maxlength: 25,
    //                minlength:4,
    //            },
    //            IsReconciled: {
    //                required: true,
    //            }
    //        },
    //        // Specify validation error messages
    //        messages: {
    //            IsExpense: "Please enter your firstname",
    //            Description: {
    //                required: "Please provide a password",
    //                minlength: "Your password must be at least 5 characters long",
    //                //maxlength: "Hello You suck enter some text < 25 chars....",
    //            }
    //        },
    //        // Make sure the form is submitted to the destination defined
    //        // in the "action" attribute of the form when valid
    //        submitHandler: function (form) {
    //            form.submit();
    //        }
    //    });
    //});

</script>
